<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_ken_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set unique variables

//Define buttons
//Need to know what buttons the player can press
b_up = ord("I");
b_right = ord("L");
b_down = ord("K");
b_left = ord("J");
b_lp = ord("Q");

//Setep button codes for special moves
//We need those as the unicodes above do not always have the same amount of digits
//Some special moves require the player to release keys in between other keys
c_up = "A";
c_right = "B";
c_down = "C";
c_left = "D";
c_lp = "E";
c_releases = "#";

//define special moves
hadouken = "CBE"; // down, right, low punch
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set and declare common variables 

//Set animation speed
image_speed = 0.25;

//Set flag variables
attack = 0;
walking = 0;
jumping = 0;
special = 0;

//Set the points variable
points = 0;

//Set variables for our special moves system
keylog = "";
dupes_allowed = 6;
cut_off = 24;

//Set movement variables
max_speed = 6;
acceleration = 2;
fric = 1;
gforce = 0.5;
ground = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Invisible wall

//Push you back when too close
if (x &gt; o_p2.x - 25) {
    motion_add(180, 25);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw points text

//First we need to set GUI size relative to room
//If we don't, the GUI will be relative to our screen resolution
display_set_gui_size(room_width, room_height);

//Set font
draw_set_font(f_arial);

//Set shadow color
draw_set_colour(c_red);

//Draw text
draw_text_transformed(6,6,string(o_p1.points),1,1,0);

//Set main color
draw_set_colour(c_yellow);

//Draw text
draw_text_transformed(5,5,string(o_p1.points),1,1,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,104</point>
    <point>52,52</point>
  </PhysicsShapePoints>
</object>
